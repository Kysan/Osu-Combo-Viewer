{"version":3,"sources":["components/GameNote.jsx","Utils/MapParser.jsx","App.js","index.js"],"names":["withPixiApp","PixiComponent","create","props","Graphics","applyProps","inst","_","x","y","radius","color","clear","beginFill","drawCircle","endFill","text","style","TextStyle","align","fill","strokeThickness","fontSize","fontFamily","fontWeight","position","anchor","MapToApp","osuFileData","beatmap","parser","parseContent","combos","currentCombo","totalCounter","localCounter","hitObjects","forEach","hitObject","objectName","newCombo","push","object","type","value","id","console","log","filter","combo","length","IQ","Array","from","keys","map","e","reverse","concat","App","state","fileData","p","index","Math","cos","sin","mouse","handleKeyDown","code","setState","handleMouse","event","handleFileLoad","file","target","files","reader","FileReader","readAsText","onload","result","replace","onerror","alert","error","document","addEventListener","this","window","screen","width","height","circleSize","className","onChange","title","accept","onPointerMove","note","number","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70886bb7.chunk.js","sourcesContent":["import {\r\n  PixiComponent,\r\n  Stage,\r\n  Text,\r\n  Container,\r\n  withPixiApp,\r\n  Sprite,\r\n} from \"@inlet/react-pixi\";\r\nimport React from \"react\";\r\nimport { Graphics, TextStyle } from \"pixi.js\";\r\n\r\n// * https://pixijs.download/release/docs/PIXI.Graphics.html#drawCircle\r\nconst customCircle = PixiComponent(\"customCircle\", {\r\n  create: (props) => new Graphics(),\r\n  applyProps: (inst, _, props) => {\r\n    const { x, y, radius, color } = props;\r\n\r\n    inst.clear();\r\n    inst.beginFill(color);\r\n    inst.drawCircle(x, y, radius);\r\n    inst.endFill();\r\n  },\r\n});\r\n\r\nconst GameNote = ({ x, y, radius, color, text }) => {\r\n  const style = new TextStyle({\r\n    align: \"center\",\r\n    fill: \"#000bff\",\r\n    strokeThickness: 2,\r\n    fontSize: (radius * 3) / 4,\r\n    fontFamily: \"Tahoma\",\r\n    fontWeight: \"bolder\",\r\n  });\r\n  return (\r\n    <Container position={[x, y]}>\r\n      <customCircle x={radius} y={radius} radius={radius} color={0xff0000} />\r\n      <customCircle\r\n        x={radius}\r\n        y={radius}\r\n        radius={(radius * 3) / 4}\r\n        color={0x00ff00}\r\n      />\r\n      <Text\r\n        x={radius}\r\n        y={radius}\r\n        text={text}\r\n        style={style}\r\n        anchor={[0.5, 0.5]}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withPixiApp(GameNote);\r\n","import parser from \"osu-parser\";\r\n\r\n// je veux que ça me retourne une liste à 2 dimensions\r\n// [[..combo1], [...combo2], [combo3], ...]\r\n// ou un combo = [{x: ?, y: ?}, {x: ?, y: ?}]\r\nfunction MapToApp(osuFileData) {\r\n  let beatmap = parser.parseContent(osuFileData);\r\n\r\n  // * pas le meilleur algo mais plus simple à lire\r\n  let combos = [];\r\n  let currentCombo = [];\r\n  let totalCounter = 0;\r\n  let localCounter = 1;\r\n  beatmap.hitObjects.forEach((hitObject) => {\r\n    let {\r\n      objectName,\r\n      newCombo,\r\n      position: [x, y],\r\n    } = hitObject;\r\n    if (newCombo) {\r\n      combos.push([...currentCombo]);\r\n      currentCombo = [];\r\n      localCounter = 1;\r\n    }\r\n\r\n    let object = {\r\n      x,\r\n      y,\r\n      type: objectName,\r\n      value: localCounter,\r\n      id: totalCounter,\r\n    };\r\n    console.log(\"loading: \", object);\r\n    totalCounter += 1;\r\n    localCounter += 1;\r\n\r\n    currentCombo.push(object);\r\n  });\r\n\r\n  // * ne pas oublié le dernier combo qui à été push\r\n  combos.push([...currentCombo]);\r\n  return combos.filter((combo) => combo.length !== 0);\r\n}\r\nexport default MapToApp;\r\n","import React, { Component, useRef } from \"react\";\nimport { Graphics } from \"pixi.js\";\nimport { Stage, Sprite, PixiComponent } from \"@inlet/react-pixi\";\n\nimport GameNote from \"./components/GameNote\";\nimport MapToApp from \"./Utils/MapParser\";\n\n// range(-10, 10, 1) <=>\nconst IQ = Array.from(Array(314).keys())\n  .map((e) => -e)\n  .reverse()\n  .concat(Array.from(Array(314).keys()));\n\nclass App extends Component {\n  state = {\n    position: { x: 0, y: 0 },\n    fileData: \"\",\n    currentCombo: 0,\n    map: [\n      IQ.map((p, index) => {\n        return {\n          x: Math.cos(p / 100) * 100 + 200,\n          y: Math.sin(p / 100) * 100 + 200,\n          value: ++index,\n        };\n      }),\n    ],\n    mouse: {},\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ code }) => {\n    let { currentCombo, map } = this.state;\n    if (\n      (code == \"KeyD\" || code == \"ArrowRight\") &&\n      currentCombo !== map.length - 1\n    ) {\n      this.setState({ currentCombo: currentCombo + 1 });\n    }\n    if ((code == \"KeyA\" || code == \"ArrowLeft\") && currentCombo !== 0) {\n      this.setState({ currentCombo: currentCombo - 1 });\n    }\n  };\n  handleMouse = (event) => {\n    // console.log(event);\n  };\n  handleFileLoad = ({ target: fileSelector }) => {\n    let file = fileSelector.files[0];\n    let reader = new FileReader();\n\n    reader.readAsText(file);\n\n    reader.onload = () => {\n      console.log(MapToApp(reader.result));\n      this.setState({\n        map: MapToApp(reader.result),\n        fileData: reader.result.replace(\" \", \"<\\br>\"),\n      });\n    };\n\n    reader.onerror = function () {\n      alert(reader.error);\n    };\n  };\n\n  render() {\n    let { x, y } = this.state.position;\n    let { width, height } = window.screen;\n\n    width = width * (80 / 100);\n    // * à partir de la on veux du 4/3\n\n    height = (3 / 4) * width;\n\n    let circleSize = height / 10;\n\n    let { map, currentCombo } = this.state;\n\n    return (\n      <div id=\"game\">\n        <div id=\"menu\">\n          <h1 className=\"title\"> Osu Combo Visualizer</h1>\n          <div className=\"toolbar\">\n            <span>Choisisez une map</span>\n            <input\n              type=\"file\"\n              onChange={this.handleFileLoad}\n              title=\"Ouvrir\"\n              accept=\".osu\"\n            />\n            <span>\n              Combo n°{currentCombo + 1}/{map.length}\n            </span>\n            <span>\n              Utilisez les flèches gauche et droite pour naviguer entre les\n              pages de combos ou alors (Q) et (D)\n            </span>\n          </div>\n        </div>\n\n        <Stage width={width} height={height} onPointerMove={this.handleMouse}>\n          {map[currentCombo].reverse().map((note, number) => {\n            let { x, y, type, value } = note; // je pouvais faire {...note} (je sais)\n            //  x (Integer) va de 0 à 512 (inclusif) et y (Integer) va de 0 à 384 (inclusif).\n            x = (x * width) / 512 - 100;\n            y = (y * height) / 384 - 100;\n            let text = value;\n            if (type === \"slider\") {\n              text += \"(s)\";\n            } else if (type === \"spiner\") {\n              text = \"spiner\";\n            }\n            return (\n              <GameNote\n                x={x}\n                y={y}\n                radius={circleSize}\n                key={number}\n                text={text}\n              />\n            );\n          })}\n        </Stage>\n        <div id=\"debug\">\n          <h2>debug:</h2>\n          {this.state.fileData}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}